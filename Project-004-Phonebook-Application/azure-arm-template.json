{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Deployment location"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "phonebook-vnet"
    },
    "vnetAddressPrefix": {
      "type": "string",
      "defaultValue": "10.10.0.0/16"
    },
    "appGatewaySubnetPrefix": {
      "type": "string",
      "defaultValue": "10.10.0.0/24"
    },
    "vmSubnetPrefix": {
      "type": "string",
      "defaultValue": "10.10.1.0/24"
    },
    "adminUsername": {
      "type": "string",
      "defaultValue": "azureuser"
    },
    "sshPublicKey": {
      "type": "string",
      "defaultValue": ""
    },
    "vmSku": {
      "type": "string",
      "defaultValue": "Standard_B2s"
    },
    "instanceCount": {
      "type": "int",
      "defaultValue": 2,
      "minValue": 1,
      "maxValue": 100
    },
    "appGatewayName": {
      "type": "string",
      "defaultValue": "phonebook-appgw-v2"
    },
    "appGatewayCapacity": {
      "type": "int",
      "defaultValue": 2
    },
    "mysqlServerName": {
      "type": "string",
      "defaultValue": "phonebook-mysql-flex"
    },
    "mysqlAdminUser": {
      "type": "string",
      "defaultValue": "adminuser"
    },
    "mysqlAdminPassword": {
      "type": "securestring"
    },
    "mysqlVersion": {
      "type": "string",
      "defaultValue": "8.0.21"
    },
    "mysqlSkuName": {
      "type": "string",
      "defaultValue": "Standard_B1ms"
    },
    "mysqlTier": {
      "type": "string",
      "defaultValue": "Burstable"
    },
    "mysqlStorageSizeGB": {
      "type": "int",
      "defaultValue": 50
    },
    "appRepositoryUrl": {
      "type": "string",
      "defaultValue": "https://github.com/AydinTokuslu/AWS-DevOps-Projects/tree/main/Project-004-Phonebook-Application"
    },
    "appInstallCommand": {
      "type": "string",
      "defaultValue": "bash /var/lib/cloud/scripts/per-instance/install.sh"
    },
    "vmImagePublisher": {
      "type": "string",
      "defaultValue": "Canonical"
    },
    "vmImageOffer": {
      "type": "string",
      "defaultValue": "0001-com-ubuntu-server-jammy"
    },
    "vmImageSku": {
      "type": "string",
      "defaultValue": "22_04-lts-gen2"
    },
    "vmImageVersion": {
      "type": "string",
      "defaultValue": "latest"
    }
  },
  "variables": {
    "vmSubnetName": "vm-subnet",
    "appGatewaySubnetName": "appgw-subnet",
    "nsgName": "vm-nsg",
    "publicIPName": "appgw-pip",
    "backendPoolName": "appgw-bepool",
    "httpSettingName": "appgw-http-settings",
    "listenerName": "appgw-http-listener",
    "requestRoutingRuleName": "appgw-rule"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2023-09-01",
      "name": "[parameters('vnetName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('vnetAddressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('appGatewaySubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('appGatewaySubnetPrefix')]"
            }
          },
          {
            "name": "[variables('vmSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('vmSubnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2023-09-01",
      "name": "[variables('nsgName')]",
      "location": "[parameters('location')]",
      "properties": {
        "securityRules": [
          {
            "name": "Allow-SSH",
            "properties": {
              "priority": 1000,
              "access": "Allow",
              "direction": "Inbound",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "22"
            }
          },
          {
            "name": "Allow-HTTP",
            "properties": {
              "priority": 1010,
              "access": "Allow",
              "direction": "Inbound",
              "protocol": "Tcp",
              "sourceAddressPrefix": "*",
              "sourcePortRange": "*",
              "destinationAddressPrefix": "*",
              "destinationPortRange": "80"
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "apiVersion": "2023-09-01",
      "name": "[variables('publicIPName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard"
      },
      "properties": {
        "publicIPAllocationMethod": "Static"
      }
    },
    {
  "type": "Microsoft.Network/applicationGateways",
  "apiVersion": "2022-09-01",
  "name": "[parameters('appGatewayName')]",
  "location": "[parameters('location')]",
  "dependsOn": [
    "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]",
    "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]"
  ],
  "sku": {
    "name": "Standard_v2",
    "tier": "Standard_v2"
  },
  "properties": {
    "autoscaleConfiguration": {
      "minCapacity": "[parameters('appGatewayCapacity')]"
    },
    "gatewayIPConfigurations": [
      {
        "name": "appGatewayIpConfig",
        "properties": {
          "subnet": {
            "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('appGatewaySubnetName'))]"
          }
        }
      }
    ],
    "frontendIPConfigurations": [
      {
        "name": "appGatewayFrontendIP",
        "properties": {
          "publicIPAddress": {
            "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))]"
          }
        }
      }
    ],
    "frontendPorts": [
      {
        "name": "port-80",
        "properties": { "port": 80 }
      }
    ],
    "backendAddressPools": [
      {
        "name": "[variables('backendPoolName')]",
        "properties": {}
      }
    ],
    "probes": [
      {
        "name": "probe-http-80-root",
        "properties": {
          "protocol": "Http",
          "path": "/",
          "interval": 30,
          "timeout": 30,
          "unhealthyThreshold": 3,
          "pickHostNameFromBackendHttpSettings": false,
          "match": { "statusCodes": [ "200-399" ] }
        }
      }
    ],
    "backendHttpSettingsCollection": [
      {
        "name": "[variables('httpSettingName')]",
        "properties": {
          "port": 80,
          "protocol": "Http",
          "cookieBasedAffinity": "Disabled",
          "pickHostNameFromBackendAddress": false,
          "requestTimeout": 30,
          "probe": {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/probes/probe-http-80-root')]"
          }
        }
      }
    ],
    "httpListeners": [
      {
        "name": "[variables('listenerName')]",
        "properties": {
          "frontendIPConfiguration": {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/frontendIPConfigurations/appGatewayFrontendIP')]"
          },
          "frontendPort": {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/frontendPorts/port-80')]"
          },
          "protocol": "Http"
        }
      }
    ],
    "requestRoutingRules": [
      {
        "name": "[variables('requestRoutingRuleName')]",
        "properties": {
          "ruleType": "Basic",
          "httpListener": {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/httpListeners/', variables('listenerName'))]"
          },
          "backendAddressPool": {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/backendAddressPools/', variables('backendPoolName'))]"
          },
          "backendHttpSettings": {
            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/backendHttpSettingsCollection/', variables('httpSettingName'))]"
          }
        }
      }
    ]
  }
},
    {
      "type": "Microsoft.Compute/virtualMachineScaleSets",
      "apiVersion": "2023-09-01",
      "name": "phonebook-vmss",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]",
        "[resourceId('Microsoft.Network/virtualNetworks', parameters('vnetName'))]",
        "[resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName'))]"
      ],
      "sku": {
        "name": "[parameters('vmSku')]",
        "tier": "Standard",
        "capacity": "[parameters('instanceCount')]"
      },
      "properties": {
        "upgradePolicy": {
          "mode": "Automatic"
        },
        "virtualMachineProfile": {
          "storageProfile": {
            "imageReference": {
              "publisher": "[parameters('vmImagePublisher')]",
              "offer": "[parameters('vmImageOffer')]",
              "sku": "[parameters('vmImageSku')]",
              "version": "[parameters('vmImageVersion')]"
            }
          },
          "osProfile": {
            "computerNamePrefix": "phonebook",
            "adminUsername": "[parameters('adminUsername')]",
            "linuxConfiguration": {
              "disablePasswordAuthentication": true,
              "ssh": {
                "publicKeys": [
                  {
                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                    "keyData": "[parameters('sshPublicKey')]"
                  }
                ]
              }
            },
            "customData": "[base64(concat('#cloud-config\\n','package_update: true\\n','packages:\\n','  - git\\n','  - nginx\\n','write_files:\\n','  - path: /var/lib/cloud/scripts/per-instance/install.sh\\n','    permissions: \"0755\"\\n','    content: |\\n','      #!/usr/bin/env bash\\n','      set -euxo pipefail\\n','      apt-get update -y\\n','      apt-get install -y python3-pip\\n','      cd /opt\\n','      if [ ! -d phonebook-app ]; then git clone ', parameters('appRepositoryUrl'), ' phonebook-app; fi\\n','      systemctl enable nginx --now\\n','      # TODO: replace with your app deployment steps\\n'))]"
          },
          "networkProfile": {
            "networkInterfaceConfigurations": [
              {
                "name": "vmssNic",
                "properties": {
                  "primary": true,
                  "ipConfigurations": [
                    {
                      "name": "ipconfig1",
                      "properties": {
                        "subnet": {
                          "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('vnetName'), variables('vmSubnetName'))]"
                        },
                        "applicationGatewayBackendAddressPools": [
                          {
                            "id": "[concat(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName')), '/backendAddressPools/', variables('backendPoolName'))]"
                          }
                        ]
                      }
                    }
                  ],
                  "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName'))]"
                  }
                }
              }
            ]
          }
        }
      }
    },
    {
      "type": "Microsoft.DBforMySQL/flexibleServers",
      "apiVersion": "2023-12-01-preview",
      "name": "[parameters('mysqlServerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('mysqlSkuName')]",
        "tier": "[parameters('mysqlTier')]",
        "family": "B",
        "capacity": 1
      },
      "properties": {
        "version": "[parameters('mysqlVersion')]",
        "administratorLogin": "[parameters('mysqlAdminUser')]",
        "administratorLoginPassword": "[parameters('mysqlAdminPassword')]",
        "storage": {
          "storageSizeGB": "[parameters('mysqlStorageSizeGB')]"
        },
        "availabilityZone": "1",
        "backup": {
          "backupRetentionDays": 7
        },
        "highAvailability": {
          "mode": "Disabled"
        },
        "network": {
          "publicNetworkAccess": "Enabled"
        }
      }
    },
    {
      "type": "Microsoft.DBforMySQL/flexibleServers/firewallRules",
      "apiVersion": "2023-12-01-preview",
      "name": "[format('{0}/{1}', parameters('mysqlServerName'), 'allowAll')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforMySQL/flexibleServers', parameters('mysqlServerName'))]"
      ],
      "properties": {
        "startIpAddress": "0.0.0.0",
        "endIpAddress": "255.255.255.255"
      }
    }
  ],
  "outputs": {
    "applicationGatewayPublicIPAddress": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses', variables('publicIPName'))).ipAddress]"
    },
    "applicationGatewayFrontendHostname": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Network/applicationGateways', parameters('appGatewayName'))).frontendPublicIpAddress.ipAddress]"
    }
  }
}