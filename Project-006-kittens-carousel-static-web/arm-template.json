{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Deployment location for regional resources."
      }
    },
    "storageAccountName": {
      "type": "string",
      "minLength": 3,
      "maxLength": 24,
      "metadata": {
        "description": "Globally unique name for the Storage Account (lowercase, numbers only)."
      }
    },
    "profileName": {
      "type": "string",
      "defaultValue": "kittens-cdn-profile",
      "metadata": {
        "description": "Azure CDN profile name."
      }
    },
    "endpointName": {
      "type": "string",
      "defaultValue": "kittens-cdn-endpoint",
      "metadata": {
        "description": "Azure CDN endpoint name."
      }
    },
    "dnsZoneName": {
      "type": "string",
      "metadata": {
        "description": "DNS zone name, e.g., clarusway.us"
      }
    },
    "fullDomainName": {
      "type": "string",
      "metadata": {
        "description": "Fully-qualified domain for the site, e.g., kittens.clarusway.us"
      }
    },
    "createDnsZone": {
      "type": "bool",
      "defaultValue": true,
      "metadata": {
        "description": "If true, create the DNS zone. Set to false if the zone already exists in this resource group."
      }
    }
  },
  "variables": {
    "storageSku": "Standard_LRS",
    "cdnSku": "Standard_Microsoft",
    "originHostName": "[concat(parameters('storageAccountName'), '.blob.core.windows.net')]",
    "originPath": "/$web",
    "relativeRecord": "[replace(parameters('fullDomainName'), concat('.', parameters('dnsZoneName')), '')]",
    "dnsZoneId": "[resourceId('Microsoft.Network/dnsZones', parameters('dnsZoneName'))]",
    "cdnProfileId": "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]",
    "cdnEndpointId": "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('profileName'), parameters('endpointName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2023-01-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "kind": "StorageV2",
      "sku": {
        "name": "[variables('storageSku')]"
      },
      "properties": {
        "supportsHttpsTrafficOnly": true,
        "minimumTlsVersion": "TLS1_2",
        "allowBlobPublicAccess": true
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ],
      "properties": {}
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices/containers",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default/$web')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "publicAccess": "Blob"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts/staticWebsite",
      "apiVersion": "2023-01-01",
      "name": "[concat(parameters('storageAccountName'), '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts/blobServices/containers', parameters('storageAccountName'), 'default', '$web')]"
      ],
      "properties": {
        "indexDocument": "index.html",
        "error404Document": "index.html",
        "enabled": true
      }
    },
    {
      "type": "Microsoft.Cdn/profiles",
      "apiVersion": "2024-02-01",
      "name": "[parameters('profileName')]",
      "location": "global",
      "sku": {
        "name": "[variables('cdnSku')]"
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints",
      "apiVersion": "2024-02-01",
      "name": "[concat(parameters('profileName'), '/', parameters('endpointName'))]",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles', parameters('profileName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts/staticWebsite', parameters('storageAccountName'), 'default')]"
      ],
      "properties": {
        "originHostHeader": "[variables('originHostName')]",
        "origins": [
          {
            "name": "storage-origin",
            "properties": {
              "hostName": "[variables('originHostName')]",
              "httpPort": 80,
              "httpsPort": 443,
              "originPath": "[variables('originPath')]"
            }
          }
        ],
        "isHttpAllowed": false,
        "isHttpsAllowed": true,
        "isCompressionEnabled": true,
        "contentTypesToCompress": [
          "text/html",
          "text/css",
          "application/javascript",
          "application/json",
          "image/svg+xml"
        ],
        "defaultOriginGroup": null
      }
    },
    {
      "condition": "[parameters('createDnsZone')]",
      "type": "Microsoft.Network/dnsZones",
      "apiVersion": "2018-05-01",
      "name": "[parameters('dnsZoneName')]",
      "location": "global",
      "properties": {}
    },
    {
      "type": "Microsoft.Network/dnsZones/CNAME",
      "apiVersion": "2018-05-01",
      "name": "[concat(parameters('dnsZoneName'), '/', variables('relativeRecord'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Cdn/profiles/endpoints', parameters('profileName'), parameters('endpointName'))]",
        "[resourceId('Microsoft.Network/dnsZones', parameters('dnsZoneName'))]"
      ],
      "properties": {
        "TTL": 3600,
        "CNAMERecord": {
          "cname": "[reference(variables('cdnEndpointId')).hostName]"
        }
      }
    },
    {
      "type": "Microsoft.Cdn/profiles/endpoints/customDomains",
      "apiVersion": "2024-02-01",
      "name": "[concat(parameters('profileName'), '/', parameters('endpointName'), '/', variables('relativeRecord'))]",
      "dependsOn": [
        "[resourceId('Microsoft.Network/dnsZones/CNAME', parameters('dnsZoneName'), variables('relativeRecord'))]"
      ],
      "properties": {
        "hostName": "[parameters('fullDomainName')]",
        "tlsSettings": {
          "certificateType": "ManagedCertificate",
          "minimumTlsVersion": "TLS12"
        }
      }
    }
  ],
  "outputs": {
    "storageAccountName": {
      "type": "string",
      "value": "[parameters('storageAccountName')]"
    },
    "cdnEndpointHostname": {
      "type": "string",
      "value": "[reference(variables('cdnEndpointId')).hostName]"
    },
    "websitePrimaryEndpoint": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))).primaryEndpoints.web]"
    },
    "fullDomainName": {
      "type": "string",
      "value": "[parameters('fullDomainName')]"
    }
  }
}